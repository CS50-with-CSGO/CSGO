(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{137:function(n,e,t){"use strict";t.r(e),t.d(e,"frontMatter",(function(){return c})),t.d(e,"metadata",(function(){return a})),t.d(e,"rightToc",(function(){return l})),t.d(e,"default",(function(){return p}));var r=t(2),i=t(9),o=(t(0),t(218)),c={id:"3\uc8fc\ucc28\ubbf8\uc158",title:"3\uc8fc\ucc28 \ubbf8\uc158"},a={id:"3/3\uc8fc\ucc28\ubbf8\uc158",isDocsHomePage:!1,title:"3\uc8fc\ucc28 \ubbf8\uc158",description:"\u2714\ufe0e \ubb38\uc81c 1. \ud559\uc810\uc744 \uacc4\uc0b0\ud574\ubcf4\uc790!",source:"@site/docs/3/3\uc8fc\ucc28\ubbf8\uc158.md",permalink:"/csgo/docs/3/3\uc8fc\ucc28\ubbf8\uc158",editUrl:"https://github.com/CS50-with-CSGO/csgo/edit/master/docs/3/3\uc8fc\ucc28\ubbf8\uc158.md",sidebar:"someSidebar",previous:{title:"8) \uba85\ub839\ud589 \uc778\uc790",permalink:"/csgo/docs/3/\uba85\ub839\ud589"},next:{title:"1) \uac80\uc0c9 \uc54c\uace0\ub9ac\uc998",permalink:"/csgo/docs/4/\uac80\uc0c9\uc54c\uace0\ub9ac\uc998"}},l=[{value:"\u2714\ufe0e \ubb38\uc81c 1. \ud559\uc810\uc744 \uacc4\uc0b0\ud574\ubcf4\uc790!",id:"\ufe0e-\ubb38\uc81c-1-\ud559\uc810\uc744-\uacc4\uc0b0\ud574\ubcf4\uc790",children:[{value:"1. \ubbf8\uc158 \uc81c\ubaa9",id:"1-\ubbf8\uc158-\uc81c\ubaa9",children:[]},{value:"2. \uc9c0\uc2dc\ubb38",id:"2-\uc9c0\uc2dc\ubb38",children:[]}]},{value:"\ud83d\ude0e \uc81c\ucd9c \ubbf8\uc158 \ub2f5\uc548",id:"-\uc81c\ucd9c-\ubbf8\uc158-\ub2f5\uc548",children:[]}],u={rightToc:l};function p(n){var e=n.components,t=Object(i.a)(n,["components"]);return Object(o.b)("wrapper",Object(r.a)({},u,t,{components:e,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"\ufe0e-\ubb38\uc81c-1-\ud559\uc810\uc744-\uacc4\uc0b0\ud574\ubcf4\uc790"},"\u2714\ufe0e \ubb38\uc81c 1. \ud559\uc810\uc744 \uacc4\uc0b0\ud574\ubcf4\uc790!"),Object(o.b)("h3",{id:"1-\ubbf8\uc158-\uc81c\ubaa9"},"1. \ubbf8\uc158 \uc81c\ubaa9"),Object(o.b)("p",null,"\ud559\uc810\uc744 \uacc4\uc0b0\ud574\ubcf4\uc790!"),Object(o.b)("h3",{id:"2-\uc9c0\uc2dc\ubb38"},"2. \uc9c0\uc2dc\ubb38"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"\ud559\uc0dd\uc758 \uc810\uc218\ub85c \ud559\uc810\uc744 \uad6c\ud558\ub294 \ud504\ub85c\uadf8\ub7a8\uc744 \uc791\uc131\ud558\uc2dc\uc624."),Object(o.b)("li",{parentName:"ul"},"\ud0a4\ubcf4\ub4dc\uc5d0\uc11c \uc785\ub825\ubc1b\uc740 \uc131\uc801 (0 ~ 100 \uc810) \uc758 \uc720\ud6a8\uc131\uc744 \uccb4\ud06c"),Object(o.b)("li",{parentName:"ul"},"\ud559\uc810\uc740 \ubc30\uc5f4\uc744 \uc774\uc6a9\ud558\uc5ec \ucd08\uae30\ud654 (\uc544\ub798 \u201c\ud559\uc810 \ud14c\uc774\ube14\u201d \ucc38\uc870)"),Object(o.b)("li",{parentName:"ul"},"\ud559\uc810\uc740 \u201c\ud559\uc810\u201d \uacfc \uac19\uc774 \uacc4\uc0b0\ud558\ub294\ub370, \ubc18\ub4dc\uc2dc \u201c\ud559\uc810 \ud14c\uc774\ube14\u201d\uc744 \uc0ac\uc6a9\ud558\uc5ec \uacc4\uc0b0\ud558\uace0 \ud559\uc810\ub3c4 \u201c\ud559\uc810 \ud14c\uc774\ube14\u201d\uc758 \ub0b4\uc6a9\uc744 \ucd9c\ub825"),Object(o.b)("li",{parentName:"ul"},"\uc131\uc801\uc744 \uc785\ub825\ud558\uc5ec \uacc4\uc18d \ud559\uc810\uc744 \uad6c\ud558\uba70 \ud2b9\ubcc4\ud55c \ubb38\uc790\uc778 \u201c-1\u201d \uc744 \uc785\ub825\ud558\uba74 \ud504\ub85c\uadf8\ub7a8\uc744 \uc885\ub8cc")),Object(o.b)("p",null,"\uc720\ud6a8\uc131 \uccb4\ud06c: 0 <= \uc131\uc801 <= 100"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"\u201c120\u201d \uc785\ub825 -> \uc131\uc801\uc744 \uc62c\ubc14\ub974\uac8c \uc785\ub825\ud558\uc138\uc694! (0 ~ 100)")),Object(o.b)("h2",{id:"-\uc81c\ucd9c-\ubbf8\uc158-\ub2f5\uc548"},"\ud83d\ude0e \uc81c\ucd9c \ubbf8\uc158 \ub2f5\uc548"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-c"}),'#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\n// \ud568\uc218 \ud504\ub85c\ud1a0\ud0c0\uc785 \uc120\uc5b8\nvoid init(void);\nfloat getScore(void);\nchar* getGrade(float score);\n\n// \uc0c1\uc218 \uc120\uc5b8\nconst int exitCode = 999;\nconst int NUMBER_OF_GRADES = 9;\nconst int SCORES[/*NUMBER_OF_GRADES*/] = {95, 90, 85, 80, 75, 70, 65, 60, 0};\nconst char *GRADES[/*NUMBER_OF_GRADES*/] = {"A+", "A", "B+", "B", "C+", "C", "D+", "D", "F"};\n\nint main(int argc, char *argv[]) {  \n    init();  // \uc2dc\uc791 \uba54\uc138\uc9c0 \ucd9c\ub825  \n    \n    float score = 0;\n    char *grade = NULL;\n    \n    while(1){       \n        score = getScore(); // \uc810\uc218 \uc785\ub825\n        \n        if(score == exitCode) {\n              break;\n        }   \n        \n        grade = getGrade(score); // \uc810\uc218 \uacc4\uc0b0\n        printf("\ud559\uc810\uc740 %s \uc785\ub2c8\ub2e4.\\n", grade);  \n    }\n    \n    printf("\ud559\uc810 \ud504\ub85c\uadf8\ub7a8\uc744 \uc885\ub8cc\ud569\ub2c8\ub2e4.\\n");\n    \n    return 0;\n}\n\nvoid init(void){\n    printf("\ud559\uc810 \ud504\ub85c\uadf8\ub7a8\\n");\n    printf("\uc885\ub8cc\ub97c \uc6d0\ud558\uba74 \\"%d\\" \ub97c \uc785\ub825\\n", exitCode);\n    printf("[\ud559\uc810 \ud14c\uc774\ube14]\\n");\n    \n    printf("\uc810\uc218 : ");\n    for(int i = 0; i < NUMBER_OF_GRADES; i++ ){\n        printf("%-4d ",SCORES[i]);\n    }\n    printf("\\n");\n    \n    printf("\ud559\uc810 : ");\n    for(int i = 0; i < NUMBER_OF_GRADES; i++ ){\n        printf("%-4s ", GRADES[i]);\n    }\n    printf("\\n");\n}\n\nfloat getScore(void){\n    \n    float score = 0;\n    // TODO: \ubb38\uc790\uac00 \ub4e4\uc5b4\uc62c \uacbd\uc6b0 \uc5d0\ub7ec \ucc98\ub9ac.\n    do{\n        printf("\uc131\uc801\uc744 \uc785\ub825\ud558\uc138\uc694 (0 ~ 100) : ");\n        scanf("%f", &score);\n        if(0 < score && score <=100)\n            return score;\n        else if(score == exitCode)\n            return score;        \n        else {\n            printf("\uc131\uc801\uc744 \uc62c\ubc14\ub974\uac8c \uc785\ub825\ud558\uc138\uc694. \ubc94\uc704\ub294 0 ~ 100 \uc785\ub2c8\ub2e4.\\n");\n        }           \n        \n    }while(1);\n    \n    return -1;\n}\n\nchar* getGrade(float score){\n    char *grade = NULL;\n    \n    for(int i = 0; i < NUMBER_OF_GRADES; i++){\n        if(score >= SCORES[i]){\n            grade = malloc(sizeof(char) * strlen(GRADES[i]));\n            strcpy(grade, GRADES[i]);\n            break;\n        }\n    }\n    \n    return grade;\n}\n')))}p.isMDXComponent=!0},218:function(n,e,t){"use strict";t.d(e,"a",(function(){return s})),t.d(e,"b",(function(){return b}));var r=t(0),i=t.n(r);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function c(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?c(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var u=i.a.createContext({}),p=function(n){var e=i.a.useContext(u),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},s=function(n){var e=p(n.components);return i.a.createElement(u.Provider,{value:e},n.children)},d={inlineCode:"code",wrapper:function(n){var e=n.children;return i.a.createElement(i.a.Fragment,{},e)}},f=i.a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,o=n.originalType,c=n.parentName,u=l(n,["components","mdxType","originalType","parentName"]),s=p(t),f=r,b=s["".concat(c,".").concat(f)]||s[f]||d[f]||o;return t?i.a.createElement(b,a(a({ref:e},u),{},{components:t})):i.a.createElement(b,a({ref:e},u))}));function b(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var o=t.length,c=new Array(o);c[0]=f;var a={};for(var l in e)hasOwnProperty.call(e,l)&&(a[l]=e[l]);a.originalType=n,a.mdxType="string"==typeof n?n:r,c[1]=a;for(var u=2;u<o;u++)c[u]=t[u];return i.a.createElement.apply(null,c)}return i.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"}}]);